---
description: Prioriza MCP y razonamiento paso a paso en todo el proyecto
globs: "**/*"
alwaysApply: true
---

# global-mcp-priorities.mdc

## Objetivo
Establecer un orden de prioridad y un flujo "paso a paso" para que el agente use MCP de forma consistente y eficiente.

## Orden de herramientas (usa en este orden cuando aplique)
1) **Sequential Thinking (MCP)** → para descomponer tareas, declarar dependencias y plan de ejecución.
2) **Serena (MCP)** → para búsqueda semántica por símbolos y ediciones quirúrgicas en el código.
3) **Docfork (MCP)** → para traer documentación actualizada de librerías/APIs antes de implementar.
4) **Pruebas/Lint/Git** → correr tests, lint y usar `git diff` para validar cambios mínimos.
5) **Web/grep/código existente** → sólo si lo anterior no resuelve.

## Reglas
- Siempre comienza con **descomposición paso a paso** (Sequential Thinking) y registra un **plan con dependencias**.
- Antes de escribir código, **valida si ya existe** funcionalidad similar; si existe, **reutiliza/extiende**.
- Para leer/editar código, **prefiere herramientas Serena**: `get_symbols_overview` → `find_symbol` → `find_referencing_symbols` → `insert_after_symbol`/`replace_symbol_body`.
- Para dudas de API/SDK, **invoca Docfork** (p. ej., “use docfork”) y cita versiones.
- Realiza cambios **mínimos y atómicos**; justifica cada cambio en el PR/diff.
- Si una llamada MCP requiere aprobación manual, **solicítala** y mientras tanto ofrece un plan textual seguro.

## Entregables mínimos por iteración
- Plan secuencial + lista de dependencias.
- Diff pequeño (git) + resultados de tests/lint.
- Notas de decisión (por qué, alternativas descartadas, referencia de doc).
